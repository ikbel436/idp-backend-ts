import { Argument, Attribute } from '../arguments';
import { TerraformArgs } from '../utils';
import { Block, Resource } from '.';
/**
 * @category Block
 */
export interface OutputArgs {
    value: any;
    description?: string;
    sensitive?: boolean;
    precondition?: TerraformArgs;
    depends_on?: Resource[];
}
/**
 * @category Block
 */
export declare class Output extends Block<OutputArgs> {
    readonly name: string;
    /**
     * Construct output.
     *
     * Refer to Terraform documentation on what can be put as arguments.
     *
     * @param name name
     * @param args arguments
     */
    constructor(name: string, args: OutputArgs);
    asArgument(): Argument;
    attr(_name: string): Attribute;
}
